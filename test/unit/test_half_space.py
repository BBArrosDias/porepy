import unittest
import numpy as np

from porepy.utils import half_space

#------------------------------------------------------------------------------#

class BasicsTest( unittest.TestCase ):

#------------------------------------------------------------------------------#

    def test_one_half_space(self):

        n  = np.array([[-1],[0],[0]])
        x0 = np.array([[0],[0],[0]])
        pts = np.array([[1,-1],[0,0],[0,0]])
        out = half_space.half_space_int(n,x0,pts)
        assert np.all(out == np.array([True,False]))

#------------------------------------------------------------------------------#

    def test_two_half_spaces(self):
        n  = np.array([[-1,0],[0,-1],[0,0]])
        x0 = np.array([[0,0],[0,1],[0,0]])
        pts = np.array([[1,-1,1,0],[2,0,2,0],[0,0,0,0]])
        out = half_space.half_space_int(n,x0,pts)
        assert np.all(out == np.array([True,False,True,False]))

#------------------------------------------------------------------------------#

    def test_half_space_pt_convex_2d(self):
        n = np.array([[0,0,0,0,1,-1],[1,1,-1,-1,0,0],[0,0,0,0,0,0]])
        x0 = np.array([[0,0,0,0,0,2/3],[0,0,1/3,1/3,0,0],[0,0,0,0,0,0]])
        pts = np.array([[0,2/3],[0,1/3],[0,0]])
        pt = half_space.half_space_pt(n, x0, pts)
        assert np.allclose(pt,[1/6,1/6,0])

#------------------------------------------------------------------------------#

    def test_half_space_pt_star_shaped_2d(self):
        n = np.array([[0,0,1,0,-1,0,1],[1,1,0,1,0,-1,0],[0,0,0,0,0,0,0]])
        x0 = np.array([[0,0,2/3,0,1,0,0],[1/3,1/3,0,0,0,2/3,0],[0,0,0,0,0,0,0]])
        pts = np.array([[0,1],[0,2/3],[0,0]])
        pt = half_space.half_space_pt(n, x0, pts)
        assert np.allclose(pt,[5/6,1/2,0])

#------------------------------------------------------------------------------#

    def test_half_space_pt_convex_3d(self):
        n = np.array([[1,-1,0,0,0,0],[0,0,1,-1,0,0],[0,0,0,0,1,-1]])
        x0 = np.array([[0,1,0,0,0,0],[0,0,0,1,0,0],[0,0,0,0,0,1]])
        pts = np.array([[1,0,0],[0,1,0],[0,0,1]])
        pt = half_space.half_space_pt(n, x0, pts)
        assert np.allclose(pt,[1/2,1/2,1/2])

#------------------------------------------------------------------------------#

    def test_half_space_pt_star_shaped_3d(self):
        n = np.array([[0,0,1,0,-1,0,1,0,0],[1,1,0,1,0,-1,0,0,0],
                      [0,0,0,0,0,0,0,1,-1]])
        x0 = np.array([[0,0,2/3,0,1,0,0,0,0],[1/3,1/3,0,0,0,2/3,0,0,0],
                       [0,0,0,0,0,0,0,0,1]])
        pts = np.array([[0,1],[0,2/3],[0,1]])
        pt = half_space.half_space_pt(n, x0, pts)
        assert np.allclose(pt,[5/6,1/2,1/6])

#------------------------------------------------------------------------------#

    def test_half_space_pt_test0(self):

        n = np.array([[-0.4346322145903923, -0.5837212981640826, -0.5545602917404856,
                  0.8874304062782964,  0.9432862408780104, -0.5285915818615673],
                [-0.9006080379611606, -0.8119540911096134,  0.8321435470065893,
                 -0.4609417251808932,  0.3319805231790443,  0.8488762804938574],
                [ 0.                , -0.                ,  0.                ,
                 -0.                ,  0.                ,  0.                ]])
        pts = np.array([[ 0.6264867087233955,  0.6264867087233955,  0.6292849480051679,
                 0.6767304875123992,  0.6767304875123992,  0.6622642106131997,
                 0.6598935979971375,  0.6012244303376967,  0.6012244303376967,
                 0.6598935979971375,  0.6622642106131997,  0.6292849480051679],
               [ 0.8042920815320497,  0.8042920815320497,  0.8411535645991798,
                 0.8205852695643441,  0.8205852695643441,  0.8616896085330092,
                 0.7881699621908844,  0.8224533668748337,  0.8224533668748337,
                 0.7881699621908844,  0.8616896085330092,  0.8411535645991798],
               [ 0.                ,  0.                ,  0.                ,
                 0.                ,  0.                ,  0.                ,
                 0.                ,  0.                ,  0.                ,
                 0.                ,  0.                ,  0.                ]])
        x0 = np.array([[ 0.6264867087233955,  0.6264867087233955,  0.6292849480051679,
                 0.6767304875123992,  0.6767304875123992,  0.6622642106131997],
               [ 0.8042920815320497,  0.8042920815320497,  0.8411535645991798,
                 0.8205852695643441,  0.8205852695643441,  0.8616896085330092],
               [ 0.                ,  0.                ,  0.                ,
                 0.                ,  0.                ,  0.                ]])
        x1 = pts[:, 6:12]
        x0 = (x1 + x0)/2

        pt = half_space.half_space_pt(n, x0, pts)
        np.set_printoptions(precision=16)
        assert np.allclose(pt,[0.6484723969922208, 0.8225131504113889, 0.])

